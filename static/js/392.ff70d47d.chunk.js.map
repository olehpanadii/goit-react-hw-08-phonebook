{"version":3,"file":"static/js/392.ff70d47d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.list;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.isError;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 300px;\n  border: 1px solid transparent;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 30px;\n  margin: 20px 0;\n`;\nexport const TransparentButton = styled.button`\n  background: transparent;\n  border: 1px solid transparent;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  color: ${p => p.theme.colors.black};\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease, color 0.3s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n\n  &:hover {\n    background: ${p => p.theme.colors.transparent};\n    color: #fff;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 5px rgba(38, 162, 252, 0.5);\n  }\n`;\nexport const StyledInput = styled(Field)`\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out;\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-family: arimo;\n  gap: ${p => p.theme.spacing(4)};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { FaRegIdCard } from 'react-icons/fa';\nimport * as Yup from 'yup';\nimport {\n  TransparentButton,\n  InputLabel,\n  StyledForm,\n  StyledInput,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^\\d{3}-\\d{2}-\\d{2}$/,\n      'Invalid phone number. Please enter a valid phone number in the format XXX-XX-XX.'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: nanoid(),\n      name: values.name,\n      number: values.number,\n    };\n    console.log(values);\n    const isContactDublicate = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (isContactDublicate) {\n      Notiflix.Notify.failure(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={contactSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <InputLabel>\n            Name\n            <StyledInput name=\"name\" type=\"text\" placeholder=\"Name Surname\" />\n            <ErrorMessage component=\"div\" name=\"name\" />\n          </InputLabel>\n          <InputLabel>\n            Number\n            <StyledInput name=\"number\" type=\"tel\" placeholder=\"000-00-00\" />\n            <ErrorMessage component=\"div\" name=\"phone\" />\n          </InputLabel>\n          <TransparentButton type=\"submit\">\n            <span>Add contact</span> <FaRegIdCard />\n          </TransparentButton>\n        </StyledForm>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DeleteBtn = styled.button`\n  background: transparent;\n  border: 1px solid transparent;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  color: ${p => p.theme.colors.black};\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease, color 0.3s ease;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(2)};\n\n  &:hover {\n    background: ${p => p.theme.colors.transparent};\n    color: #fff;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 5px rgba(38, 162, 252, 0.5);\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(6)};\n  align-items: center;\n  justify-content: center;\n  border: 1px solid transparent;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  padding: 10px 15px;\n  border-radius: 5px;\n`;\nexport const ContactNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.spacing(8)};\n`;\n\nexport const ContainerList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  gap: ${p => p.theme.spacing(8)};\n  padding-bottom: 40px;\n`;\n","import { FaPhoneAlt, FaUserTimes } from 'react-icons/fa';\nimport {\n  ContactItem,\n  ContactNumber,\n  ContainerList,\n  DeleteBtn,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const visibleContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <ContainerList>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          <h3>{name}</h3>\n          <ContactNumber>\n            <p>\n              <FaPhoneAlt /> {number}\n            </p>\n            <DeleteBtn onClick={() => dispatch(deleteContact(id))}>\n              Delete <FaUserTimes />\n            </DeleteBtn>\n          </ContactNumber>\n        </ContactItem>\n      ))}\n    </ContainerList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 300px;\n  border: 1px solid transparent;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 30px;\n  margin: 20px 0;\n`;\nexport const StyledInput = styled.input`\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: box-shadow 0.3s ease-in-out;\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-family: arimo;\n  gap: ${p => p.theme.spacing(4)};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterWrapper, InputLabel, StyledInput } from './Filter.styled';\nimport { filteredContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterWrapper>\n      <InputLabel>\n        Find contact by name\n        <StyledInput\n          type=\"text\"\n          value={filter}\n          onChange={evt => {\n            dispatch(filteredContacts(evt.target.value));\n          }}\n          placeholder=\"Search contact\"\n        />\n      </InputLabel>\n    </FilterWrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <div>{isLoading && 'Request in progress...'}</div>\n\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectLoading","isLoading","selectFilter","filter","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","TransparentButton","_templateObject2","colors","black","transparent","StyledInput","Field","_templateObject3","InputLabel","_templateObject4","contactSchema","Yup","shape","name","min","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","newContact","id","nanoid","console","log","some","contact","toLowerCase","Notiflix","concat","addContact","_jsxs","type","placeholder","ErrorMessage","component","FaRegIdCard","DeleteBtn","ContactItem","ContactNumber","ContainerList","ContactList","visibleContacts","includes","map","FaPhoneAlt","onClick","deleteContact","FaUserTimes","FilterWrapper","Filter","value","onChange","evt","filteredContacts","target","Tasks","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}